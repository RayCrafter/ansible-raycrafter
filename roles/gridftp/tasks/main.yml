---

- name: Create the gridftp user
  user: name={{ gridftp_user }} state=present
  tags:
    - gridftp

- name: Download Globus repo package
  get_url: url="{{ gridftp_repo_url }}"
           dest="/tmp/globusrepo.deb"
  tags:
    - gridftp
    - packages

- name: Install Globus GridFTP repo
  command: dpkg -i /tmp/globusrepo.deb
           creates=/etc/apt/sources.list.d/{{ gridftp_repo_creates_file }}
  register: globusrepo
  tags:
    - gridftp
    - packages

- name: Update apt
  apt: update_cache=yes
  when: globusrepo.changed
  tags:
    - gridftp
    - packages

- name: Install Globus Package
  apt: name=globus-data-management-client state=latest
  tags:
    - gridftp
    - packages

- name: Create globus config dir
  file: path="~/.globus" state=directory mode=0700
  become: yes
  become_user: "{{ gridftp_user }}"
  tags:
    - gridftp

- name: Create globus certificate dir
  file: path="~/.globus/certificates" state=directory
  become: yes
  become_user: "{{ gridftp_user }}"
  tags:
    - gridftp

- name: Copy certificate
  copy: src="{{gridftp_cert_file}}" dest="~/.globus/usercert.pem"
        mode=0600
  become: yes
  become_user: "{{ gridftp_user }}"
  tags:
    - gridftp

- name: Copy key
  copy: src="{{gridftp_key_file}}" dest="~/.globus/userkey.pem"
        mode=0600
  become: yes
  become_user: "{{ gridftp_user }}"
  tags:
    - gridftp

- name: Download CA package
  get_url: url="{{gridftp_ca_package_url}}"
           dest="~/.globus/certificates/globuscerts.tar.gz"
  become: yes
  become_user: "{{ gridftp_user }}"
  tags:
    - gridftp

- name: Unpack CA package
  unarchive: copy=no src="~/.globus/certificates/globuscerts.tar.gz"
             dest="~/.globus/certificates/"
  become: yes
  become_user: "{{ gridftp_user }}"
  tags:
    - gridftp
